/*
 * This file is generated by jOOQ.
 */
package ru.zagamaza.competition.infra.dao.jooq.schema.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.zagamaza.competition.infra.dao.jooq.schema.tables.User;


/**
 * Таблица пользователей и его опыта
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record4<Integer, OffsetDateTime, Integer, Integer> {

    private static final long serialVersionUID = 234059510;

    /**
     * Setter for <code>public.user.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user.created</code>.
     */
    public void setCreated(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user.created</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.user.experience</code>. Количество опыта
     */
    public void setExperience(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user.experience</code>. Количество опыта
     */
    public Integer getExperience() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.user.level_id</code>. идентификатор уровня лиги
     */
    public void setLevelId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user.level_id</code>. идентификатор уровня лиги
     */
    public Integer getLevelId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, OffsetDateTime, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, OffsetDateTime, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return User.USER_ENTITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field2() {
        return User.USER_ENTITY.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return User.USER_ENTITY.EXPERIENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return User.USER_ENTITY.LEVEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getExperience();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLevelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getExperience();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLevelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(Integer value) {
        setExperience(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(Integer value) {
        setLevelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(Integer value1, OffsetDateTime value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER_ENTITY);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, OffsetDateTime created, Integer experience, Integer levelId) {
        super(User.USER_ENTITY);

        set(0, id);
        set(1, created);
        set(2, experience);
        set(3, levelId);
    }
}
