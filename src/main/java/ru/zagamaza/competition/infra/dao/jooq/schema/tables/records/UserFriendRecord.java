/*
 * This file is generated by jOOQ.
 */
package ru.zagamaza.competition.infra.dao.jooq.schema.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.zagamaza.competition.infra.dao.jooq.schema.tables.UserFriend;


/**
 * Таблица связи друзей
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFriendRecord extends UpdatableRecordImpl<UserFriendRecord> implements Record4<Long, Long, Long, OffsetDateTime> {

    private static final long serialVersionUID = 1391106810;

    /**
     * Setter for <code>public.user_friend.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_friend.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_friend.user_id</code>. идентификатор пользователя
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_friend.user_id</code>. идентификатор пользователя
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.user_friend.user_friend_id</code>. идентификатор друга пользователя
     */
    public void setUserFriendId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_friend.user_friend_id</code>. идентификатор друга пользователя
     */
    public Long getUserFriendId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.user_friend.created</code>.
     */
    public void setCreated(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_friend.created</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return UserFriend.USER_FRIEND_ENTITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return UserFriend.USER_FRIEND_ENTITY.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return UserFriend.USER_FRIEND_ENTITY.USER_FRIEND_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field4() {
        return UserFriend.USER_FRIEND_ENTITY.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getUserFriendId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component4() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserFriendId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value4() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserFriendRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserFriendRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserFriendRecord value3(Long value) {
        setUserFriendId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserFriendRecord value4(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserFriendRecord values(Long value1, Long value2, Long value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserFriendRecord
     */
    public UserFriendRecord() {
        super(UserFriend.USER_FRIEND_ENTITY);
    }

    /**
     * Create a detached, initialised UserFriendRecord
     */
    public UserFriendRecord(Long id, Long userId, Long userFriendId, OffsetDateTime created) {
        super(UserFriend.USER_FRIEND_ENTITY);

        set(0, id);
        set(1, userId);
        set(2, userFriendId);
        set(3, created);
    }
}
